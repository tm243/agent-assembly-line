version: 2.1
orbs:
  node: circleci/node@5
  python: circleci/python@3
jobs:
  test-node:
    executor: node/default
    working_directory: ~/project/app
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: echo "No test specified in package.json"
  build-node:
    executor: node/default
    working_directory: ~/project/app
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts
            2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  test-python:
    docker:
      - image: cimg/python:3.9-node
      - image: ollama/ollama:latest
        name: ollama
    resource_class: large
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Wait for Ollama to start
          command: |
            until curl -s http://ollama:11434/; do
              echo "Waiting for Ollama to start..."
              sleep 5
            done
      - run:
          name: Pull Gemma3 Model Using Web API
          command: |
            curl -X POST http://ollama:11434/api/pull \
              -H "Content-Type: application/json" \
              -d '{"model": "gemma3:4b"}'
      - run:
          name: Pull Nomic-Embed-Text Model Using Web API
          command: |
            curl -X POST http://ollama:11434/api/pull \
              -H "Content-Type: application/json" \
              -d '{"model": "nomic-embed-text"}'
      - run:
          name: Run tests
          command: |
            mkdir -p test-results
            python -m unittest discover -s tests/
      - store_test_results:
          path: test-results
  build-python-package:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - python/install-packages
      - run:
          name: Install build tool
          command: python -m pip install --upgrade pip build
      - run:
          name: Build pip package
          command: python -m build
      - run:
          name: Store built package
          command: mkdir -p ~/artifacts && cp dist/* ~/artifacts
      - store_artifacts:
          path: ~/artifacts
          destination: python-package
  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: deploy
          command: "#e.g. ./deploy.sh"
workflows:
  build-and-test:
    jobs:
      - test-node:
          context:
            &a1 []
      - build-node:
          requires:
            - test-node
            - test-python
            - build-python-package
          context: []
      - test-python:
          context: *a1
      - build-python-package:
          context: []
